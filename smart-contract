pragma solidity ^0.4.0;

contract mycoin_ico
{
    uint public max_mycoins=1000000;
    uint public usd_to_mycoin=1000;
    uint public total_mycoin_bought=0;
    
    mapping(address=>uint) equity_mycoin;
    mapping(address=>uint) equity_usd;
    
    modifier can_buy_mycoin(uint usd_invested)
    {
        require (usd_invested * usd_to_mycoin * total_mycoin_bought <= max_mycoins);
        _;
    }
    
    function get_equity_mycoin(address investor) external view returns(uint)
    {
        return equity_mycoin[investor];
    }
    
    function get_equity_usd(address investor) external view returns(uint)
    {
        return equity_usd[investor];
    }
    
    function buy_mycoin(address investor , uint usd_invested) external can_buy_mycoin(usd_invested)
    {
        uint mycoin_bought= usd_invested*usd_to_mycoin;
        equity_mycoin[investor]+=mycoin_bought;
        equity_usd[investor]+=equity_mycoin[investor]/100;
        total_mycoin_bought+=mycoin_bought;
    }
     
    function sell_mycoin(address investor , uint mycoins_sold) external
    {
       
        equity_mycoin[investor]-=mycoins_sold;
        equity_usd[investor]+=equity_mycoin[investor]/100;
        total_mycoin_bought-=mycoins_sold;
    } 
}
